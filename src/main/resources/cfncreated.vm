<html>
<head>
    <title>$i18n.getText("migration.page.label")</title>
    <meta name="decorator" content="atl.admin">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/aws-sdk/2.606.0/aws-sdk.min.js"></script>
    $webResourceManager.requireResource("com.atlassian.auiplugin:ajs")
    $webResourceManager.requireResource("com.aws.apn.migration.serverPlugin:resources")
    $webResourceManager.requireResource("com.atlassian.auiplugin:aui-spinner")
    $webResourceManager.requireResource("com.atlassian.auiplugin:aui-lozenge")
    $webResourceManager.requireResource("com.atlassian.auiplugin:aui-table")
    $webResourceManager.requireResource("com.atlassian.auiplugin:aui-progress-indicator")

</head>
<body>
<h1>Cloudformation Quickstart Processing Status</h1>
<h3>Stack Name: <i>jira-dc-autocreated</i></h3>
<p><strong>Created in </strong><i>$region</i></p>
<p><a href="$costEstimateURL" target="_blank">Cost Estimate</a></p>
<div class="aui-page-panel">
    <div class="aui-page-panel-inner">
        <section class="aui-page-panel-content">
            <div id="search-area-example" class="custom-card-style">
                <aui-progressbar id="auiProgress"></aui-progressbar>
                <table class="aui">
                    <thead>
                    <tr>
                        <th id="basic-number">Event</th>
                        <th id="basic-fname">Resource</th>
                        <th id="basic-lname">Reason</th>
                        <th id="basic-username">Type</th>
                    </tr>
                    </thead>
                    <tbody id="tableContent"></tbody>
                </table>
                <div id="refreshBanner" class="aui-message aui-message-info">
                    <p>Do not refresh. This page updates automatically.</p>
                </div>
                <p>&nbsp;</p>
            </div>
            <div class="custom-card-style">
                <button id="proceedButton" class="aui-button aui-button-primary" disabled>Proceed</button>
            </div>
        </section>
    </div>
</div>
<script type="text/javascript">
    AWS.config.region = '$region';
    AWS.config.credentials = {
        accessKeyId: '$accessKey',
        secretAccessKey: '$secretKey'
    };
    let cloudformation = new AWS.CloudFormation();
    let params = {
        StackName: "jira-dc-autocreated"
    };

    let updateProgressBar = function () {
        cloudformation.describeStackResources(params, function (err, data) {
            let progress = document.getElementById("auiProgress");
            progress.max = data.StackResources.length;
            progress.value = 0;
            for (var i = 0, n = progress.max; i < n; i++) {
                let item = data.StackResources[i];
                if (item.ResourceStatus === 'CREATE_COMPLETE') {
                    progress.value++;
                }
            }
        });
    };

    let getStatus = function () {
        cloudformation.describeStackEvents(params, function (err, data) {
            if (err) {
                console.log(err, err.stack);
            } else {
                let resources = data.StackEvents.reverse();
                let tableContent = $("#tableContent");
                tableContent.empty();
                for (let i = 0, n = resources.length; i < n; i++) {
                    let item = resources[i];
                    let resourceReason = typeof item.ResourceStatusReason !== 'undefined' ? item.ResourceStatusReason : '&nbsp;';
                    let hide = item.ResourceStatus === 'CREATE_IN_PROGRESS' && typeof item.ResourceStatusReason === 'undefined';
                    if (!hide) {
                        let row = tableContent.append("<tr>");
                        row.append("<td><span class=\"aui-lozenge " + defineLozenge(item.ResourceStatus) + "\">" + item.ResourceStatus + "</span></td>");
                        row.append("<td>" + item.LogicalResourceId + "</td>");

                        row.append("<td>" + resourceReason + "</td>");
                        row.append("<td>" + item.ResourceType + "</td>");
                    }
                    if (item.ResourceStatus === 'CREATE_COMPLETE' && item.LogicalResourceId === 'jira-dc-autocreated') {
                        $("#refreshBanner").hide();
                        $("#proceedButton").prop('disabled', false);
                    }
                }
                updateProgressBar();
            }
        });
    };

    let defineLozenge = function (status) {
        let lozengeValue = "";
        switch (status) {
            case "CREATE_IN_PROGRESS": {
                lozengeValue = 'aui-lozenge-inprogress';
                break;
            }
            case "CREATE_FAILED": {
                lozengeValue = 'aui-lozenge-error';
                break;
            }
            case "CREATE_COMPLETE": {
                lozengeValue = 'aui-lozenge-success';
                break;
            }
            case "DELETE_IN_PROGRESS": {
                lozengeValue = 'aui-lozenge-inprogress';
                break;
            }
            case "DELETE_FAILED": {
                lozengeValue = 'aui-lozenge-error';
                break;
            }
            case "DELETE_COMPLETE": {
                lozengeValue = 'aui-lozenge-success';
                break;
            }
            case "DELETE_SKIPPED": {
                lozengeValue = 'aui-lozenge-moved';
                break;
            }
            case "UPDATE_IN_PROGRESS": {
                lozengeValue = 'aui-lozenge-inprogress';
                break;
            }
            case "DELETE_SKIPPED": {
                lozengeValue = 'aui-lozenge-moved';
                break;
            }
            case "UPDATE_FAILED": {
                lozengeValue = 'aui-lozenge-error';
                break;
            }
            case "UPDATE_COMPLETE": {
                lozengeValue = 'aui-lozenge-success';
                break;
            }
            case "IMPORT_FAILED": {
                lozengeValue = 'aui-lozenge-error';
                break;
            }
            case "IMPORT_COMPLETE": {
                lozengeValue = 'aui-lozenge-success';
                break;
            }
            case "IMPORT_IN_PROGRESS": {
                lozengeValue = 'aui-lozenge-inprogress';
                break;
            }
            case "IMPORT_ROLLBACK_IN_PROGRESS": {
                lozengeValue = 'aui-lozenge-error';
                break;
            }
            case "IMPORT_ROLLBACK_FAILED": {
                lozengeValue = 'aui-lozenge-error';
                break;
            }
            case "IMPORT_ROLLBACK_COMPLETE": {
                lozengeValue = 'aui-lozenge-success';
                break;
            }
            default: {
                break;
            }
        }
        return lozengeValue;
    };
    getStatus();
    window.setInterval(function () {
        getStatus();
    }, 10000);
</script>
</body>
</html>